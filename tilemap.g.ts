// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile0 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . 2 2 2 . . . . . 2 . . . . . . . . . . . . . . 2 
2 . . . . . 2 . . . . . . 2 . . . . . . . . . . . . . . . . . 2 
2 . . . 2 . . . . . . . . . . . . . 2 . . . . . . 2 . . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6], TileScale.Sixteen);
            case "level_0":
            case "level_0":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 . 2 . . . . . . . . . . 
. . . . . . . 2 2 2 . . . 2 . . . 2 . 2 . 2 . . . . . . . . . . 
2 . . . . . 2 2 2 2 2 2 2 2 . 2 . 2 . 2 . 2 . . . . . . . . . . 
2 . . . . 2 2 2 2 2 . . . 2 . 2 . 2 . 2 . 2 . . . . . . . . . . 
2 . . . . . . . . 2 . . . 2 . . . . . . . 2 . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "level_1":
            case "level_1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . 2 . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . 2 . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . 2 . 2 . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile2,myTiles.tile3,myTiles.tile5,myTiles.tile6,myTiles.tile1,myTiles.tile7,myTiles.tile4], TileScale.Sixteen);
            case "level_2":
            case "level_2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . 
. . . . 2 . . . . 2 . . . . . . . . . . . . . . . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "level_3":
            case "level_3":return tiles.createTilemap(hex`2000080000000000000700070000070000070000070000000000070000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500050000000000050000000000000000050000000000000000010000000000030003000000000003000005000000000003000000000000000003000000000000000000000500000000000300000000000303040505050504030300060003040404040404030404040404030404040404030303030303030303030202020302020202020203020202020203020202020203020202020202020202`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . 2 . . . . . 2 . . . . . . . . 2 . . . . . . . . 2 
. . . . . . . . . . . . . . . . 2 . . . . . 2 2 . . . . . . 2 2 
. . . 2 . . . . . . 2 . . . . . 2 . . . . . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "level_4":
            case "level_4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . 2 2 . 2 2 . . 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 2 2 . . . . . . . . . . . . . 2 
2 . . . . 2 . 2 . . . . . . . 2 2 2 2 . . . . . . . . . . . . 2 
2 . . 2 . 2 . 2 . . 2 . . . . 2 2 2 2 2 . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "level_5":
            case "level_5":return tiles.createTilemap(hex``, img`
.2.................................2...
..2222222222222222222222222222222..2...
...................................2...
...................................2...
....22222222222222222222222222222222...
2......................................
2......................................
222222222222222222222222222222222222222
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile6,myTiles.tile5,myTiles.tile7], TileScale.Sixteen);
            case "level_6":
            case "level_6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 2 . . . 2 2 2 . . 2 2 . . 2 2 . . 2 2 2 2 2 2 2 . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
. . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile6,myTiles.tile5,myTiles.tile4,myTiles.tile7], TileScale.Sixteen);
            case "level9":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3,myTiles.tile1,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "level10":
            case "level3":return tiles.createTilemap(hex`25000c`, img`
.....................................
.....................................
2222.................................
2....................................
2....................................
2....................................
2................................2222
2............................2.......
2........................2...2.......
2................2...2...2...22......
2................2...2...2...222.....
2222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile0":return tile0;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "tile5":return tile5;
            case "tile6":return tile6;
            case "tile7":return tile7;
            case "myTile":
            case "tile8":return tile8;
            case "myTile0":
            case "tile9":return tile9;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
